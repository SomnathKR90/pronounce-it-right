
plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.microsoft.azure.azurewebapp" version "1.1.0"
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "war"
apply plugin: 'jacoco'

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
	mavenCentral()
}


azurewebapp {
    subscription = 'd8d3f55a-8679-4dad-bbe3-3b851100c78e'
    resourceGroup = 'rg-Asgardians'
    appName = 'pronounce-it-right'
    pricingTier = 'B1' 
    region = 'eastus' 
    runtime {
        os = 'Linux' 
        webContainer = 'Tomcat 9.0'
        javaVersion = 'Java 8'
    }
}

group = "com.wellsfargo.pronounce"
defaultTasks 'clean', 'bootRun'

ext.warname = "pronounce-it-right"
ext.tomcatPort = 8215
ext.remoteDebugPort = 5215
ext.snippetsDir = file('build/generated-snippets')

configurations {
    asciidoctorExt
    developmentOnly.extendsFrom implementation
    all {
        exclude group:'org.springframework.boot', module: 'spring-boot-starter-logging'
        resolutionStrategy {
            // fail eagerly on version conflict (includes transitive dependencies)
            // e.g. multiple different versions of the same dependency (group and name are equal)
            failOnVersionConflict()

            // prefer modules that are part of this build (multi-project or composite build) over external modules
            preferProjectModules()
            cacheDynamicVersionsFor 0, 'seconds'
        }
        exclude group: "commons-logging", module: "commons-logging"
        exclude group: "ch.qos.logback", module: "logback-classic"
        exclude group: "org.apache.logging.log4j", module: "log4j-to-slf4j"
        exclude group: "com.mchange", module: "c3p0"
        exclude group: "or", module: "c3p0"
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencies {
    
    implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // provided becuase this is required to run locally
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"
    providedCompile "org.springframework.boot:spring-boot-starter-tomcat"

    // common testing stuff
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation group: "org.springframework", name: "spring-test"
    testImplementation group: 'org.springframework.security', name: 'spring-security-test'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // rest docs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    implementation group: 'net.sf.sociaal', name: 'freetts', version: '1.2.2'
    
    implementation 'org.springframework.data:spring-data-jpa'
    implementation group: 'com.yugabyte', name: 'spring-data-yugabytedb-ysql', version: '2.3.0'
    implementation group: 'com.yugabyte', name: 'jdbc-yugabytedb', version: '42.2.7-yb-5-beta.1'
    implementation 'com.zaxxer:HikariCP'
    implementation group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final' 

}


test {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.enabled true
    }
}

// required because the classpath is too long for windows
// solution from https://stackoverflow.com/questions/40037487/the-filename-or-extension-is-too-long-error-using-gradle
task pathingJar(type: Jar) {
    appendix = 'pathing'

    doFirst {
       manifest {
           attributes "Class-Path": configurations.developmentOnly.files.collect {it.toURL().toString().replaceFirst("file:/", '/')}.join(" ")
       }
   }
}

bootWar {
    // at this time bootWar creates an executable war and when deployed to pcf launches an embedded tomcat
    // this is not supported by ECS yet, so we generate a regular war
    enabled = false
}
war {
    enabled = true
    classifier = ''
}
bootRun {
    jvmArgs = [
             "-Dchannelsecure.disable=true",
             "-Dserver.port=$tomcatPort",
             "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=$remoteDebugPort"
             ]
    
    classpath = files(sourceSets.main.output.files, sourceSets.test.output.files, pathingJar.archivePath)
}
bootRun.dependsOn([pathingJar, testClasses])

bootJar {
    classpath configurations.developmentOnly
    duplicatesStrategy 'exclude'
}

task bootJarRun() {
    doLast {
        javaexec {
            main = "-jar"
            args bootJar.archiveFile.get()
            jvmArgs = [
                 "-Dchannelsecure.disable=true",
                 "-Dserver.port=$tomcatPort",
                 "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=$remoteDebugPort"
                 ]
        }
    }
}